Process Process-15:
Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/content/decentralizepy/src/decentralizepy/node/EpidemicLearning/EL_Oracle_Client.py", line 12, in __init__
    super().__init__(*args, **kwargs)
  File "/content/decentralizepy/src/decentralizepy/node/DPSGDWithPeerSampler.py", line 105, in __init__
    self.instantiate(
  File "/content/decentralizepy/src/decentralizepy/node/DPSGDNode.py", line 349, in instantiate
    self.init_sharing(config["SHARING"])
  File "/content/decentralizepy/src/decentralizepy/node/Node.py", line 318, in init_sharing
    self.sharing = sharing_class(
                   ^^^^^^^^^^^^^^
  File "/content/decentralizepy/src/decentralizepy/sharing/PlainAverageSharing.py", line 52, in __init__
    super().__init__(
  File "/content/decentralizepy/src/decentralizepy/sharing/Sharing.py", line 67, in __init__
    t = v.flatten().numpy()
        ^^^^^^^^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
